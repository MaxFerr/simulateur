{"version":3,"sources":["components/loanType/loanType.js","components/loanAmount/loanAmount.js","components/loanDescription/loanDescription.js","components/loanLength/loanLength.js","components/loanLengthList/loanLengthList.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["connect","state","credits","dispatch","handleLoanTypeDis","val","type","value","loanTypeTitle","map","cred","description","title","i18n","key","className","onChange","e","target","list","name","id","selectedAmount","loanAmountMax","loanAmountMin","errorAmount","handleAmountChangeDis","amountValue","amount","min","max","defaultValue","sum","props","monthlyPaymentSum","loanTypeSum","taeg","rang","rangeDurationType","total","handleLoanCardDis","amountToPay","rangeRate","ranges","index","payload","active","onClick","length","handleClick","defaultRangeDuration","range","i","range_max","range_min","range_duration","dur","ind","range_rate","Math","floor","pow","undefined","ref","React","createRef","App","current","scrollIntoView","behavior","block","Container","fluid","Row","Col","sm","this","Component","Boolean","window","location","hostname","match","initialState","Object","entries","data","loanType","loanTypeData","reducer","action","uState","credit","amount_max","amount_min","amount_default","range_duration_default","range_duration_type","errAmount","totalTopay","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6f9a6789.chunk.js","sourcesContent":["import React from 'react';\r\nimport './loanType.css';\r\nimport {connect} from 'react-redux';\r\n\r\nconst LoanType=(dispatch)=>{\r\n\t//getting all the loan type\r\n\tconst loanTypeTitle=dispatch.credits.map(cred=>{\r\n\t\tlet type=`${cred[1].description?cred[1].description.title:cred[1].i18n.title}`\r\n\t\treturn <option \r\n\t\tvalue={type} \r\n\t\tkey={`${cred[0]}`}>{type}</option>\r\n\t});\r\n\r\n\tconst handleLoanType=(e)=>{\r\n\t\tconst val=e.target.value\t\t\r\n\t\tdispatch.handleLoanTypeDis(val)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<label className='typeLab' >Type de prêt</label>\r\n\t\t\t  <select onChange={handleLoanType} list=\"loanTypes\" name=\"loanType\" id=\"loanType\">\r\n\t\t\t  <option value=\"Rien de sélectionné\">Rien de sélectionné</option>\t\t\t  \r\n\t\t\t    {loanTypeTitle}\r\n\t\t\t  </select>\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nconst mapStateToProps=state=>{\r\n\treturn {\r\n\t\tcredits:state.credits\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n\treturn {\r\n\t\thandleLoanTypeDis:(val)=>dispatch({type:'SELECT_LOAN_TYPE',value:val})\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoanType);","import React from 'react';\r\nimport './loanAmount.css';\r\nimport {connect} from 'react-redux';\r\n\r\nconst LoanAmount=(dispatch)=>{\r\n\tconst handleAmountChange=(e)=>{\r\n\t\tconst amount=e.target.value\t\t\r\n\t\tdispatch.handleAmountChangeDis(amount)\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<label className='amount'>Montant</label>\r\n\t\t\t  <input \t\t\t  \r\n\t\t\t  type='number' \r\n\t\t\t  name=\"loanAmount\" \r\n\t\t\t  id=\"loanAmount\"\r\n\t\t\t  onChange={handleAmountChange}\t\t\t   \r\n\t\t\t  value={dispatch.selectedAmount} \r\n\t\t\t  min={dispatch.loanAmountMin} \r\n\t\t\t  max={dispatch.loanAmountMax} />\r\n\t\t\t  <input  list=\"devices\" name=\"device\" id=\"device\" defaultValue='€'/>\r\n\t\t\t  <datalist id=\"devices\">\r\n\t\t\t    <option value=\"€\"/>\t\t\t    \r\n\t\t\t  </datalist>\r\n\t\t\t  <span className='amount red'>\r\n\t\t\t  {dispatch.errorAmount\r\n\t\t\t  \t?`Selectionnez un montant entre ${dispatch.loanAmountMin} - ${dispatch.loanAmountMax} €`\r\n\t\t\t  \t:null\r\n\t\t\t  }\r\n\t\t\t  \t</span>\t\t\t  \r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\n\r\nconst mapStateToProps=state=>{\r\n\treturn {\r\n\t\tselectedAmount:state.selectedAmount,\r\n\t\tloanAmountMax:state.loanAmountMax,\r\n\t\tloanAmountMin:state.loanAmountMin,\r\n\t\terrorAmount:state.errorAmount,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n\treturn {\r\n\t\thandleAmountChangeDis:(val)=>dispatch({type:'SELECT_AMOUNT',amountValue:val})\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoanAmount);\r\n","import React from 'react';\r\nimport './loanDescription.css';\r\nimport {connect} from 'react-redux';\r\n\r\nconst LoanDescritpion=(props)=>{\r\n\treturn (\r\n\t\t<div className='description'>\r\n\t\t\t<p>Mensualités : {props.sum.monthlyPaymentSum}€ </p>\r\n\t\t\t<p>Type de crédit : {props.sum.loanTypeSum} </p>\r\n\t\t\t<p>Montant : {props.sum.amount}€</p>\r\n\t\t\t<p>TAEG : {props.sum.taeg}%</p>\r\n\t\t\t<p>Durée : {props.sum.rang} {props.sum.rangeDurationType==='years'?'ans':'mois'} </p>\r\n\t\t\t<p>Total à payer : {props.sum.total}€</p>\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nconst mapStateToProps=state=>{\r\n\treturn {\r\n\t\tsum:state.sum\r\n\t};\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(LoanDescritpion);\r\n","import React from 'react';\r\nimport './loanLength.css';\r\nimport {connect} from 'react-redux';\r\n\r\nconst LoanLength=(props)=>{\r\n\r\n\tconst handleLoanCard =()=>{\r\n\t\tprops.handleLoanCardDis(props.amountToPay,props.selectedAmount,props.rangeRate,props.rangeDurationType,props.ranges,props.index,props.length)\r\n\t\tprops.handleClick()\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={`loanCard ${props.active===props.index?'active':null}`}\t\r\n\t\tonClick={handleLoanCard}>\t\t\t\r\n\t\t\t<p>{props.ranges} {props.rangeDurationType==='months'?'mois':'ans'}</p>\r\n\t\t\t<p>{props.amountToPay}€</p>\t\t\t\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nconst mapDispatchToProps=dispatch=>{\r\n\treturn {\r\n\t\thandleLoanCardDis:(amountToPay,selectedAmount,rangeRate,rangeDurationType,ranges,index)=>dispatch({type:'LOANCARD_CLICK',payload:{\r\n\t\t\t\tamountToPay:amountToPay,\r\n\t\t\t\tselectedAmount:selectedAmount,\r\n\t\t\t\trangeRate:rangeRate,\r\n\t\t\t\trangeDurationType:rangeDurationType,\r\n\t\t\t\tranges:ranges,\r\n\t\t\t\tindex:index\t\t\r\n\r\n\t\t} })\r\n\t};\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(LoanLength);\r\n","import React from 'react';\r\nimport LoanLength from '../loanLength/loanLength.js';\r\nimport './loanLengthList.css';\r\nimport {connect} from 'react-redux';\r\n\r\nconst LoanLengthList=(dispatch)=>{\t\r\n\t//displaying all the possible range\t\r\n\tconst list=dispatch.ranges.map((range,i)=>{\r\n\t\tif(dispatch.selectedAmount<=range.range_max && dispatch.selectedAmount>=range.range_min){\r\n\t\t\treturn range.range_duration.map((dur,ind)=>{\r\n\t\t\t\treturn <LoanLength\r\n\t\t\t\t\t\t  defaultRangeDuration={dispatch.defaultRangeDuration} \r\n\t\t\t              rangeDurationType={dispatch.rangeDurationType}\r\n\t\t\t              ranges={dur}\r\n\t\t\t              key={dur}\r\n\t\t\t              selectedAmount={dispatch.selectedAmount}\r\n\t\t\t              rangeRate={range.range_rate}\r\n\t\t\t              amountToPay={Math.floor((dispatch.selectedAmount*((range.range_rate/100)/12))/(1-(Math.pow(1+((range.range_rate/100)/12),(-dur)))))}\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  index={ind}\r\n\t\t\t\t\t\t  active={dispatch.active}\r\n\t\t\t\t\t\t  handleClick={dispatch.handleClick}\r\n\t\t\t\t\t\t/>\r\n\t\t\t});\r\n\t\t}else if(range.range_max===undefined){\r\n\t\t\treturn <LoanLength\r\n\t\t\t\t\t\t  defaultRangeDuration={dispatch.defaultRangeDuration}\r\n\t\t\t\t\t\t  selectedAmount={dispatch.selectedAmount} \r\n\t\t\t              rangeDurationType={dispatch.rangeDurationType}\r\n\t\t\t              ranges={range.range_duration}\r\n\t\t\t              key={range.range_duration}\r\n\t\t\t              rangeRate={range.range_rate}\r\n\t\t\t              amountToPay={Math.floor((dispatch.selectedAmount*((range.range_rate/100)/12))/(1-(Math.pow(1+((range.range_rate/100)/12),(-range.range_duration*12)))))}\t\t\t\t\t\t  \r\n\t\t\t\t\t\t  index={i}\r\n\t\t\t\t\t\t  active={dispatch.active}\r\n\t\t\t\t\t\t  handleClick={dispatch.handleClick}\r\n\t\t\t\t\t\t/>\r\n\t\t};\r\n\t\treturn null;\r\n\t});\r\n\treturn (\r\n\t\t<div className='loanList'>\r\n\t\t\t<p>Durée</p>\r\n\t\t\t<div className='loanListCard'>\r\n\t\t\t\t{list}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps=state=>{\r\n\treturn {\r\n\t\tdefaultRangeDuration:state.defaultRangeDuration,\r\n\t\trangeDurationType:state.rangeDurationType,\r\n\t\tranges:state.ranges,\r\n\t\tactive:state.active,\r\n\t\tselectedAmount:state.selectedAmount\r\n\t};\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(LoanLengthList);\r\n","import React, { Component } from 'react';\nimport {Row,Col,Container} from 'react-bootstrap';\nimport './App.css';\nimport LoanType from './components/loanType/loanType';\nimport LoanAmount from './components/loanAmount/loanAmount';\nimport LoanDescription from './components/loanDescription/loanDescription';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport LoanLengthList from './components/loanLengthList/loanLengthList';\n\nconst ref = React.createRef();\n\n\nclass App extends Component {\n  \n  handleClick = () =>\n    ref.current.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start',\n        });\n\n\n  \n  \n  render(){    \n      return (\n      <div className=\"App\">\n        <h1 className=\"headerH\">Simulateur</h1>\n        <Container fluid id=\"cont\">\n          <Row>\n            <Col sm={8}>\n              <LoanType/>\n              <LoanAmount/>              \n              <LoanLengthList handleClick={this.handleClick}/>\n            </Col>\n            <Col sm={4} >\n              <span ref={ref}>\n              <LoanDescription/>\n              </span>\n            </Col>\n          </Row>\n        </Container>        \n      </div>\n    );\n  };  \n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import data from '../credits.json';\r\n\r\nconst initialState={\r\n        credits:Object.entries(data),\r\n        loanType:\"\",\r\n        loanTypeData:[],        \r\n        loanAmountMax:0,\r\n        loanAmountMin:0,\r\n        selectedAmount:0,\r\n        errorAmount:false,\r\n        defaultRangeDuration:0,\r\n        rangeDurationType:\"\",\r\n        ranges:[],\r\n        sum:{\r\n          monthlyPaymentSum:0,\r\n          loanTypeSum:\"Pas encore sélectionné\",\r\n          amount:0,\r\n          taeg:0,\r\n          total:0,\r\n          rangeDurationType:\"\",\r\n          rang:0          \r\n        },\r\n        active:null\r\n    };\r\n\r\nconst reducer=(state=initialState,action )=>{\r\n\tswitch(action.type){\r\n\t\tcase 'SELECT_LOAN_TYPE':\r\n\t\t//handle the change and the selection of the loan type\r\n    \t//looping in credits\r\n\t\t    \tstate={\r\n\t\t    \t\t...initialState,\r\n\t\t    \t\tloanType:action.value,\r\n\t\t    \t\tsum:{\r\n\t\t\t          \t...initialState.sum,\r\n\t\t\t          \tloanTypeSum:action.value\r\n\t\t        \t},\r\n\t\t    \t}; \r\n\t\t      for (var i = 0; i < state.credits.length; i++){\r\n\t\t        let index=i;\r\n\t\t        let uState={\r\n\t\t        \t  loanType:action.value,\r\n\t\t              loanTypeData:state.credits[index],              \r\n\t\t              loanAmountMax:state.credits[index][1].credit.amount_max,\r\n\t\t              loanAmountMin:state.credits[index][1].credit.amount_min,\r\n\t\t              selectedAmount:state.credits[index][1].credit.amount_default,\r\n\t\t              defaultRangeDuration:state.credits[index][1].credit.range_duration_default,\r\n\t\t              rangeDurationType:state.credits[index][1].credit.range_duration_type,\r\n\t\t              ranges:state.credits[index][1].ranges\r\n\t\t            };\r\n\t\t            //reseting the state\r\n\t\t            if(action.value!=='Rien de sélectionné'){\r\n\t\t            \t//checking if credits.description is true (it can be undefined because of 'credit hypo' loan type object)\r\n\t\t\t            if(state.credits[i][1].description){\r\n\t\t\t              //finding the data corresponding to the input's value \r\n\t\t\t                if(state.credits[i][1].description.title===action.value){\r\n\t\t\t                  //updating the state\r\n\t\t\t                  return {\r\n\t\t\t                  \t...state,\r\n\t\t\t                  \t...uState\r\n\t\t\t                  };\r\n\t\t\t                };\r\n\t\t\t            }else{\r\n\t\t\t              //finding the data corresponding to the input's value (for 'credit hypo')\r\n\t\t\t              //this if statement isnt necessary. It's just there if we add more data like\r\n\t\t\t              //state.credits[i][1].i18n\r\n\t\t\t                if(state.credits[i][1].i18n.title===action.value){\r\n\t\t\t                  //updating the state\r\n\t\t\t                  return {\r\n\t\t\t                  \t...state,\r\n\t\t\t                  \t...uState\r\n\t\t\t                  };\r\n\t\t\t                };\r\n\t\t\t            };\r\n\t\t            }else{\r\n\t\t            \treturn {\r\n\t\t            \t\t...initialState\r\n\t\t            \t};\r\n\t\t            };\r\n\t\t      };\r\n\t\t      break;\r\n\t    case 'SELECT_AMOUNT':\t        \r\n\t\t    //reseting the state when the amount change\r\n\t\t    //handling error if the amount is insufficient or superior to the data\r\n\t\t    //corresponding to the range and the loan type \r\n\t\t    let errAmount=action.amountValue<state.loanAmountMin\r\n\t\t        || \r\n\t\t        action.amountValue>state.loanAmountMax ? true : false\r\n\t\t    return {\r\n\t\t    \t...state,\r\n\t\t    \tselectedAmount:action.amountValue,\r\n\t\t      \tactive:null,\r\n\t\t      \tsum:{\r\n\t\t            monthlyPaymentSum:0,\r\n\t\t            loanTypeSum:\"Pas encore sélectionné\",\r\n\t\t            amount:0,\r\n\t\t            taeg:0,\r\n\t\t            total:0,\r\n\t\t            rangeDurationType:\"\",\r\n\t\t            rang:0          \r\n\t\t          },\r\n\t\t          errorAmount:errAmount      \r\n\t\t    };\r\n\t\t   \r\n\t\tcase 'LOANCARD_CLICK':\r\n\t\t    //handle click on card   \r\n\t\t    let totalTopay;\r\n\t\t    //calculating the total to pay (transform year to month)\r\n\t\t    if(action.payload.rangeDurationType==='months'){\r\n\t\t      totalTopay=action.payload.amountToPay*action.payload.ranges;\r\n\t\t    }else{\r\n\t\t      totalTopay=action.payload.amountToPay*(action.payload.ranges[0]*12);\r\n\t\t    };\t\t    \r\n\t\t      //updating the state with the data received from the click on card\t\t      \r\n\t\t        return {\r\n\t\t        \t...state,\r\n\t\t          sum:{\r\n\t\t          monthlyPaymentSum:action.payload.amountToPay,\r\n\t\t          loanTypeSum:state.loanType,\r\n\t\t          amount:state.selectedAmount,\r\n\t\t          taeg:action.payload.rangeRate,\r\n\t\t          total:totalTopay,\r\n\t\t          rangeDurationType:action.payload.rangeDurationType,\r\n\t\t          rang:action.payload.ranges\r\n\t\t        },\r\n\t\t        active:action.payload.index\r\n\t\t        };\r\n\r\n\t    default :\r\n\t\t    return state;\t\t    \r\n\t};\t\r\n};\r\n\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport reducer from './store/reducer.js';\nimport {Provider} from 'react-redux'\n\nconst store= createStore(reducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n\t<Provider store={store} >\n\t  <React.StrictMode>\n\t    <App />\n\t  </React.StrictMode>\n    </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}