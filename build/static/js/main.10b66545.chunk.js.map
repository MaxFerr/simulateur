{"version":3,"sources":["components/loanType/loanType.js","components/loanAmount/loanAmount.js","components/loanDescription/loanDescription.js","components/loanLength/loanLength.js","components/loanLengthList/loanLengthList.js","App.js","serviceWorker.js","index.js"],"names":["LoanType","props","loanTypeTitle","credits","map","cred","type","description","title","i18n","value","key","className","onChange","handleLoanType","list","name","id","LoanAmount","handleAmountChange","selectedAmount","min","loanAmountMin","max","loanAmountMax","defaultValue","errorAmount","LoanDescritpion","sum","monthlyPaymentSum","loanTypeSum","amount","taeg","rang","length","total","LoanLength","active","index","onClick","handleLoanCard","amountToPay","rangeRate","rangeDurationType","ranges","LoanLengthList","range","i","range_max","range_min","range_duration","dur","ind","defaultRangeDuration","range_rate","Math","floor","pow","undefined","ref","React","createRef","App","handleClick","current","scrollIntoView","behavior","block","event","setState","loanTypeData","loanType","target","state","prevState","credit","amount_max","amount_min","amount_default","range_duration_default","range_duration_type","e","totalTopay","Object","entries","data","Container","fluid","Row","Col","sm","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.10b66545.chunk.js","sourcesContent":["import React from 'react';\r\nimport './loanType.css';\r\n\r\nconst LoanType=(props)=>{\r\n\t//getting all the loan type\r\n\tconst loanTypeTitle=props.credits.map(cred=>{\r\n\t\tlet type=`${cred[1].description?cred[1].description.title:cred[1].i18n.title}`\r\n\t\treturn <option \r\n\t\tvalue={type} \r\n\t\tkey={`${cred[0]}`}>{type}</option>\r\n\t});\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<label className='typeLab' >Type de prêt</label>\r\n\t\t\t  <select onChange={props.handleLoanType} list=\"loanTypes\" name=\"loanType\" id=\"loanType\">\r\n\t\t\t  <option value=\"Rien de sélectionné\">Rien de sélectionné</option>\t\t\t  \r\n\t\t\t    {loanTypeTitle}\r\n\t\t\t  </select>\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default LoanType;","import React from 'react';\r\nimport './loanAmount.css'\r\n\r\nconst LoanAmount=(props)=>{\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<label className='amount'>Montant</label>\r\n\t\t\t  <input \t\t\t  \r\n\t\t\t  type='number' \r\n\t\t\t  name=\"loanAmount\" \r\n\t\t\t  id=\"loanAmount\"\r\n\t\t\t  onChange={props.handleAmountChange}\t\t\t   \r\n\t\t\t  value={props.selectedAmount} \r\n\t\t\t  min={props.loanAmountMin} \r\n\t\t\t  max={props.loanAmountMax} />\r\n\t\t\t  <input  list=\"devices\" name=\"device\" id=\"device\" defaultValue='€'/>\r\n\t\t\t  <datalist id=\"devices\">\r\n\t\t\t    <option value=\"€\"/>\t\t\t    \r\n\t\t\t  </datalist>\r\n\t\t\t  <span className='amount red'>\r\n\t\t\t  {props.errorAmount\r\n\t\t\t  \t?`Selectionnez un montant entre ${props.loanAmountMin} - ${props.loanAmountMax} €`\r\n\t\t\t  \t:null\r\n\t\t\t  }\r\n\t\t\t  \t</span>\t\t\t  \r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default LoanAmount;","import React from 'react';\r\nimport './loanDescription.css';\r\n\r\nconst LoanDescritpion=(props)=>{\r\n\treturn (\r\n\t\t<div className='description'>\r\n\t\t\t<p>Mensualités : {props.sum.monthlyPaymentSum}€ </p>\r\n\t\t\t<p>Type de crédit : {props.sum.loanTypeSum} </p>\r\n\t\t\t<p>Montant : {props.sum.amount}€</p>\r\n\t\t\t<p>TAEG : {props.sum.taeg}%</p>\r\n\t\t\t<p>Durée : {props.sum.rang} {props.sum.length==='years'?'ans':'mois'} </p>\r\n\t\t\t<p>Total à payer : {props.sum.total}€</p>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default LoanDescritpion;","import React from 'react';\r\nimport './loanLength.css'\r\n\r\nconst LoanLength=(props)=>{\r\n\treturn (\r\n\t\t<div className={`loanCard ${props.active===props.index?'active':null}`}\t\r\n\t\tonClick={()=>{props.handleLoanCard(props.amountToPay,\r\n\t\t\tprops.selectedAmount,\r\n\t\t\tprops.rangeRate,\r\n\t\t\tprops.rangeDurationType,\r\n\t\t\tprops.ranges,props.index)}}>\t\t\t\r\n\t\t\t<p>{props.ranges} {props.rangeDurationType==='months'?'mois':'ans'}</p>\r\n\t\t\t<p>{props.amountToPay}€</p>\t\t\t\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default LoanLength;","import React from 'react';\r\nimport LoanLength from '../loanLength/loanLength.js';\r\nimport './loanLengthList.css';\r\n\r\nconst LoanLengthList=(props)=>{\r\n\t//displaying all the possible range\r\n\tconst list=props.ranges.map((range,i)=>{\r\n\t\tif(props.selectedAmount<=range.range_max && props.selectedAmount>=range.range_min){\r\n\t\t\treturn range.range_duration.map((dur,ind)=>{\r\n\t\t\t\treturn <LoanLength\r\n\t\t\t\t\t\t  defaultRangeDuration={props.defaultRangeDuration} \r\n\t\t\t              rangeDurationType={props.rangeDurationType}\r\n\t\t\t              ranges={dur}\r\n\t\t\t              key={dur}\r\n\t\t\t              selectedAmount={props.selectedAmount}\r\n\t\t\t              rangeRate={range.range_rate}\r\n\t\t\t              amountToPay={Math.floor((props.selectedAmount*((range.range_rate/100)/12))/(1-(Math.pow(1+((range.range_rate/100)/12),(-dur)))))}\r\n\t\t\t\t\t\t  handleLoanCard={props.handleLoanCard}\r\n\t\t\t\t\t\t  index={ind}\r\n\t\t\t\t\t\t  active={props.active}\r\n\t\t\t\t\t\t/>\r\n\t\t\t});\r\n\t\t}else if(range.range_max===undefined){\r\n\t\t\treturn <LoanLength\r\n\t\t\t\t\t\t  defaultRangeDuration={props.defaultRangeDuration}\r\n\t\t\t\t\t\t  selectedAmount={props.selectedAmount} \r\n\t\t\t              rangeDurationType={props.rangeDurationType}\r\n\t\t\t              ranges={range.range_duration}\r\n\t\t\t              key={range.range_duration}\r\n\t\t\t              rangeRate={range.range_rate}\r\n\t\t\t              amountToPay={Math.floor((props.selectedAmount*((range.range_rate/100)/12))/(1-(Math.pow(1+((range.range_rate/100)/12),(-range.range_duration*12)))))}\r\n\t\t\t\t\t\t  handleLoanCard={props.handleLoanCard}\r\n\t\t\t\t\t\t  index={i}\r\n\t\t\t\t\t\t  active={props.active}\r\n\t\t\t\t\t\t/>\r\n\t\t};\r\n\t\treturn null;\r\n\t});\r\n\treturn (\r\n\t\t<div className='loanList'>\r\n\t\t\t<p>Durée</p>\r\n\t\t\t<div className='loanListCard'>\r\n\t\t\t\t{list}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nexport default LoanLengthList;","import React, { Component } from 'react';\nimport {Row,Col,Container} from 'react-bootstrap';\nimport './App.css';\nimport data from './credits.json'\nimport LoanType from './components/loanType/loanType'\nimport LoanAmount from './components/loanAmount/loanAmount'\nimport LoanDescription from './components/loanDescription/loanDescription'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport LoanLengthList from './components/loanLengthList/loanLengthList'\nconst ref = React.createRef();\n\nclass App extends Component {\n  constructor(props){\n    super(props)    \n    this.state={\n        credits:Object.entries(data),\n        loanType:\"\",\n        loanTypeData:[],        \n        loanAmountMax:0,\n        loanAmountMin:0,\n        selectedAmount:0,\n        errorAmount:false,\n        defaultRangeDuration:0,\n        rangeDurationType:\"\",\n        ranges:[],\n        sum:{\n          monthlyPaymentSum:0,\n          loanTypeSum:\"Pas encore sélectionné\",\n          amount:0,\n          taeg:0,\n          total:0,\n          length:\"\",\n          rang:0          \n        },\n        active:null\n    };\n  };\n  handleClick = () =>\n        ref.current.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start',\n        });\n\n  handleLoanType=(event)=>{\n    //handle the change and the selection of the loan type\n    //reseting the state\n    this.setState({\n      loanTypeData:[],\n      loanType:event.target.value,\n      errorAmount:false,\n      active:null,\n      ranges:[],\n      sum:{\n          monthlyPaymentSum:0,\n          loanTypeSum:\"Pas encore sélectionné\",\n          amount:0,\n          taeg:0,\n          total:0,\n          length:\"\",\n          rang:0          \n        }\n    });\n    //looping in credits\n    for (var i = 0; i < this.state.credits.length; i++) {\n      let index=i;\n      //checking if credits.description is true (it can be undefined because of 'credit hypo' loan type object)\n      if(this.state.credits[i][1].description){\n        //finding the data corresponding to the input's value \n        if(this.state.credits[i][1].description.title===event.target.value){\n          //updating the state\n          this.setState((prevState,props)=>{\n            return {\n              loanTypeData:prevState.credits[index],              \n              loanAmountMax:prevState.credits[index][1].credit.amount_max,\n              loanAmountMin:prevState.credits[index][1].credit.amount_min,\n              selectedAmount:prevState.credits[index][1].credit.amount_default,\n              defaultRangeDuration:prevState.credits[index][1].credit.range_duration_default,\n              rangeDurationType:prevState.credits[index][1].credit.range_duration_type,\n              ranges:prevState.credits[index][1].ranges\n            };\n          });\n        };\n      }else{\n        //finding the data corresponding to the input's value (for 'credit hypo')\n        //this if statement isnt necessary. It's just there if we add more data like\n        //this.state.credits[i][1].i18n\n        if(this.state.credits[i][1].i18n.title===event.target.value){          \n          this.setState((prevState,props)=>{\n            return {\n              loanTypeData:prevState.credits[index],              \n              loanAmountMax:prevState.credits[index][1].credit.amount_max,\n              loanAmountMin:prevState.credits[index][1].credit.amount_min,\n              selectedAmount:prevState.credits[index][1].credit.amount_default,\n              defaultRangeDuration:prevState.credits[index][1].credit.range_duration_default,\n              rangeDurationType:prevState.credits[index][1].credit.range_duration_type,\n              ranges:prevState.credits[index][1].ranges\n            };\n          });\n        };       \n      };\n    };   \n  };\n\n  handleAmountChange=(e)=>{\n    //reseting the state when the amount change\n    this.setState({\n      selectedAmount:e.target.value,\n      active:null,\n        sum:{\n            monthlyPaymentSum:0,\n            loanTypeSum:\"Pas encore sélectionné\",\n            amount:0,\n            taeg:0,\n            total:0,\n            length:\"\",\n            rang:0          \n          }\n    });\n    //handling error if the amount is insufficient or superior to the data\n    //corresponding to the range and the loan type \n    this.setState((prevState,props)=>{\n      if(prevState.selectedAmount<prevState.loanAmountMin \n        || \n        prevState.selectedAmount>prevState.loanAmountMax){\n        return {\n          errorAmount:true\n        }; \n      }else{\n        return {\n          errorAmount:false\n        }; \n      };\n    });          \n  };\n\n  handleLoanCard=(monthlyPaymentSum,amount,taeg,length,ranges,index)=>{\n    //handle click on card   \n    let totalTopay;\n    //calculating the total to pay (transform year to month)\n    if(length==='months'){\n      totalTopay=monthlyPaymentSum*ranges;\n    }else{\n      totalTopay=monthlyPaymentSum*(ranges[0]*12);\n    };\n      //updating the state with the data received from the click on card\n      this.setState((prevState,props)=>{\n        return {\n          sum:{\n          monthlyPaymentSum:monthlyPaymentSum,\n          loanTypeSum:prevState.loanType,\n          amount:amount,\n          taeg:taeg,\n          total:totalTopay,\n          length:length,\n          rang:ranges\n        },\n        active:index\n        };\n      });\n      this.handleClick();\n  };\n  \n  render(){    \n      return (\n      <div className=\"App\">\n        <h1 className=\"headerH\">Simulateur</h1>\n        <Container fluid id=\"cont\">\n          <Row>\n            <Col sm={8}>\n              <LoanType handleLoanType={this.handleLoanType} \n              credits={this.state.credits}\n              />\n              <LoanAmount \n              selectedAmount={this.state.selectedAmount} \n              loanAmountMax={this.state.loanAmountMax}\n              loanAmountMin={this.state.loanAmountMin}\n              handleAmountChange={this.handleAmountChange}\n              errorAmount={this.state.errorAmount} \n              />              \n              <LoanLengthList\n              selectedAmount={this.state.selectedAmount} \n              defaultRangeDuration={this.state.defaultRangeDuration} \n              rangeDurationType={this.state.rangeDurationType}\n              ranges={this.state.ranges}\n              handleLoanCard={this.handleLoanCard}\n              active={this.state.active}\n              />\n            </Col>\n            <Col sm={4} >\n              <span ref={ref}>\n              <LoanDescription sum={this.state.sum}/>\n              </span>\n            </Col>\n          </Row>\n        </Container>        \n      </div>\n    );\n  };  \n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}